#ifndef BOX_H
#define BOX_H 

//==============================
//    INCLUDES
//==============================

#include <vector>

using std::vector;

/**
 * @class Box
 * @brief Creates a box
 */

class Box
{
public:
//==============================
//    CONSTRUCTORS
//==============================
Box();
Cell cell_

//==============================
//    DESTRUCTOR
//==============================
virtual ~Box();

//==============================
//    GETTERS
//==============================
inline vector<float> conc_;

//==============================
//    SETTERS
//==============================

//==============================
//    OPERATORS
//==============================

//==============================
//    PUBLIC METHODS
//==============================


protected:
//==============================
//    PROTECTED METHODS
//==============================

//==============================
//    ATTRIBUTES
//==============================
vector <float> conc_(3);
int diffusionspeed_;
Cell *cellptr_;


};

//==============================
//    GETTER DEFINITION
//==============================
inline Box::conc()
{
  return conc_;
}

//==============================
//    SETTER DEFINITION
//==============================

//==============================
//    OPERATOR DEFINITION
//==============================


#endif // BOX_H